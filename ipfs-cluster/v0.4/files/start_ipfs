#!/bin/sh
set -e
repo="$IPFS_PATH"

echo "=== start_ipfs called ==="
if [-e "/data/ipfs/swarm.key" ]; then
  echo "== swarm.key already exists"
else
  echo "== copy swarm.key from /data/ to /data/ipfs/"
  #this is required during start-up, because /data/ipfs is on a persistent volume which is mounted during initialization of the container.
  cp /data/swarm.key /data/ipfs/
fi

echo "== call ipfs version"
ipfs version

if [ -e "$repo/config" ]; then
  echo "== Found IPFS fs-repo at $repo"
else
  echo "== calling ipfs init..."
  ipfs init
  echo "==  init called"
  ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
  echo "==  api configured"
  ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080
  echo "==  gateway configured"
fi

# if the first argument is daemon
if [ "$1" = "daemon" ]; then
  echo "== param 1 == daemon => shifting parameters"
  # filter the first argument until
  # https://github.com/ipfs/go-ipfs/pull/3573
  # has been resolved
  shift
else
  # print deprecation warning
  # go-ipfs used to hardcode "ipfs daemon" in it's entrypoint
  # this workaround supports the new syntax so people start setting daemon
  # explicitly
  # when overwriting CMD, making this PR safe to merge
  echo "DEPRECATED: arguments have been set but the first argument isn't
'daemon'" >&2
  echo "DEPRECATED: run 'docker run ipfs/go-ipfs daemon $@' instead" >&2
  echo "DEPRECATED: see the following PRs for more information:" >&2
  echo "DEPRECATED: * https://github.com/ipfs/go-ipfs/pull/3573" >&2
  echo "DEPRECATED: * https://github.com/ipfs/go-ipfs/pull/3685" >&2
fi

echo "== calling ipfs daemon..."
ipfs daemon "$@"
